#include <stdlib.h>
#include <math.h>

// Node structure for the linked list
struct Node {
    int coefficient;
    int power_x;
    int power_y;
    int power_z;
    struct Node* next;
};

// Function to create a new node
struct Node* createNode(int coeff, int px, int py, int pz) {
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->coefficient = coeff;
    newNode->power_x = px;
    newNode->power_y = py;
    newNode->power_z = pz;
    newNode->next = NULL;
    return newNode;
}

// Function to insert a term into the linked list
void insertTerm(struct Node** head, int coeff, int px, int py, int pz) {
    struct Node* newNode = createNode(coeff, px, py, pz);
    if (*head == NULL) {
        // If the list is empty, make the new node as the header node
        *head = createNode(0, 0, 0, 0);
        (*head)->next = newNode;
        newNode->next = *head;
    } else {
        // Insert the new node at the end of the list
        struct Node* temp = *head;
        while (temp->next != *head) {
            temp = temp->next;
        }
        temp->next = newNode;
        newNode->next = *head;
    }
}

// Function to evaluate the polynomial for given values of x, y, and z
double evaluatePolynomial(struct Node* head, int x, int y, int z) {
    double result = 0.0;
    struct Node* current = head->next;

    while (current != head) {
        result += current->coefficient * pow(x, current->power_x) * pow(y, current->power_y) * pow(z, current->power_z);
        current = current->next;
    }

    return result;
}

// Function to display the polynomial
void displayPolynomial(struct Node* head) {
    struct Node* current = head->next;
    while (current != head) {
        printf("%dx^%dy^%dz^%d", current->coefficient, current->power_x, current->power_y, current->power_z);
        if (current->next != head) {
            printf(" + ");
        }
        current = current->next;
    }
    printf("\n");
}

int main() {
    struct Node* head = NULL;

    // Represent the polynomial P(x, y, z) = 6x^2 * y^2 * z - 4 * yz^5 + 3x^3 * yz + 2xy^5 * z - 2xyz^3
    insertTerm(&head, 6, 2, 2, 1);
    insertTerm(&head, -4, 0, 1, 5);
    insertTerm(&head, 3, 3, 1, 1);
    insertTerm(&head, 2, 1, 5, 1);
    insertTerm(&head, -2, 1, 1, 3);

    // Display the polynomial
    printf("Polynomial: ");
    displayPolynomial(head);

    // Evaluate the polynomial for x=2, y=3, z=4
    int x = 2, y = 3, z = 4;
    double result = evaluatePolynomial(head, x, y, z);

    printf("Result for x=%d, y=%d, z=%d: %.2f\n", x, y, z, result);

    return 0;
}
